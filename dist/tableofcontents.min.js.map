{"version":3,"file":"tableofcontents.min.js","sources":["../src/tableofcontents.js"],"sourcesContent":["class Toc {\n    constructor(contentSelector, tocSelector, headingIds, options = {}) {\n        this.contentArea = document.querySelector(contentSelector);\n        this.toc = document.querySelector(tocSelector);\n        if (!this.contentArea || !this.toc) {\n            console.error(\"Content area or TOC container not found.\");\n            return;\n        }\n        this.headingIds = headingIds;\n        this.options = Object.assign({\n            offsetTop: 120,\n            duration: 500,\n            maxItems: 10,\n            classes: {\n                h1: 'toc-h1',\n                h2: 'toc-h2',\n                h3: 'toc-h3',\n                h4: 'toc-h4',\n                h5: 'toc-h5',\n                h6: 'toc-h6'\n            },\n            showAll: { enabled: false, id: '' },\n            toggleButton: { enabled: false, id: '' },\n            includeHeadings: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] // 追加: 目次に含める見出しレベル\n        }, options);\n        this.counters = {\n            h1: 1,\n            h2: 1,\n            h3: 1,\n            h4: 1,\n            h5: 1,\n            h6: 1\n        };\n        this.idCount = 1;\n    }\n\n    sanitizeId(id) {\n        return id.replace(/[^a-zA-Z0-9-_]/g, '');\n    }\n\n    initialize() {\n        if (!this.contentArea || !this.toc) {\n            console.error(\"Initialization failed: contentArea or TOC container not found.\");\n            return;\n        }\n\n        // オプションで指定された見出しレベルを使用してセレクタを作成\n        const selector = this.options.includeHeadings.join(', ');\n        const headings = this.contentArea.querySelectorAll(selector);\n        const tocList = document.createElement('ul');\n        let itemCount = 0;\n\n        headings.forEach(h => {\n            const tagName = h.tagName.toLowerCase();\n            itemCount++;\n\n            const idList = this.headingIds[tagName];\n            const count = this.counters[tagName];\n\n            if (idList && idList.length >= count) {\n                h.id = this.sanitizeId(idList[count - 1]);\n            } else {\n                h.id = `header${this.idCount}`;\n            }\n\n            this.counters[tagName]++;\n            this.idCount++;\n\n            const tocItem = document.createElement('li');\n            tocItem.classList.add(this.options.classes[tagName] || `toc-${tagName}`);\n            if (itemCount > this.options.maxItems && this.options.includeHeadings.includes(tagName)) {\n                tocItem.classList.add('hidden');\n            }\n            const tocLink = document.createElement('a');\n            tocLink.href = `#${h.id}`;\n            tocLink.textContent = h.textContent;\n            tocLink.addEventListener('click', (e) => {\n                e.preventDefault();\n                const header = document.querySelector(`#${h.id}`);\n                const headerTop = header.getBoundingClientRect().top + window.pageYOffset;\n                const offsetTop = headerTop - this.options.offsetTop;\n                window.scrollTo({\n                    top: offsetTop,\n                    behavior: 'smooth'\n                });\n            });\n            tocItem.appendChild(tocLink);\n\n            let currentList = tocList;\n            if (tagName !== 'h1') {\n                const parentTag = `h${parseInt(tagName[1]) - 1}`;\n                const parentItems = tocList.querySelectorAll(`.${this.options.classes[parentTag] || `toc-${parentTag}`}`);\n                if (parentItems.length > 0) {\n                    const lastParentItem = parentItems[parentItems.length - 1];\n                    let subList = lastParentItem.querySelector('ul');\n                    if (!subList) {\n                        subList = document.createElement('ul');\n                        lastParentItem.appendChild(subList);\n                    }\n                    currentList = subList;\n                }\n            }\n            currentList.appendChild(tocItem);\n        });\n\n        const showAllButton = this.options.showAll.enabled ? document.getElementById(this.options.showAll.id) : null;\n        if (showAllButton && itemCount > this.options.maxItems) {\n            showAllButton.addEventListener('click', () => {\n                const hiddenItems = tocList.querySelectorAll('.hidden');\n                hiddenItems.forEach(item => item.classList.remove('hidden'));\n                showAllButton.style.display = 'none';\n            });\n        }\n\n        this.toc.appendChild(tocList);\n\n        const toggleButton = this.options.toggleButton.enabled ? document.getElementById(this.options.toggleButton.id) : null;\n        if (toggleButton) {\n            toggleButton.addEventListener('click', () => {\n                const isActive = this.toc.style.display !== 'none';\n                if (isActive) {\n                    this.toc.style.display = 'none';\n                    if (showAllButton) {\n                        showAllButton.style.display = 'none';\n                    }\n                    // Reset hidden items\n                    const hiddenItems = tocList.querySelectorAll('li');\n                    hiddenItems.forEach((item, index) => {\n                        const tagName = item.querySelector('a').hash.substring(1).match(/^header\\d+$/) ? 'h2' : 'h1';\n                        if (index >= this.options.maxItems && this.options.includeHeadings.includes(tagName)) {\n                            item.classList.add('hidden');\n                        }\n                    });\n                } else {\n                    this.toc.style.display = 'block';\n                    if (showAllButton) {\n                        showAllButton.style.display = itemCount > this.options.maxItems ? 'block' : 'none';\n                    }\n                }\n            });\n        }\n\n        this.toc.style.display = 'block';\n        if (showAllButton) {\n            showAllButton.style.display = itemCount > this.options.maxItems ? 'block' : 'none';\n        }\n    }\n}\n\n// グローバル関数として提供\nwindow.Toc = Toc;\n"],"names":["window","Toc","constructor","contentSelector","tocSelector","headingIds","options","this","contentArea","document","querySelector","toc","Object","assign","offsetTop","duration","maxItems","classes","h1","h2","h3","h4","h5","h6","showAll","enabled","id","toggleButton","includeHeadings","counters","idCount","console","error","sanitizeId","replace","initialize","selector","join","headings","querySelectorAll","tocList","createElement","itemCount","forEach","h","tagName","toLowerCase","idList","count","length","tocItem","classList","add","includes","tocLink","href","textContent","addEventListener","e","preventDefault","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","appendChild","currentList","parentTag","parseInt","parentItems","lastParentItem","subList","showAllButton","getElementById","item","remove","style","display","index","hash","substring","match"],"mappings":"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"}